{"version":3,"file":"static/js/741.dea76aed.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/List/List.styled.jsx","components/List/List.jsx","components/App/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["\n import styled from '@emotion/styled'\nimport { Field ,ErrorMessage} from 'formik'\nexport const Input = styled(Field)`\nheight: 20px;\nborder-radius: 4px;\nborder: 1px solid;\n   :hover{\n    border-color: black;\n   }\n`\nexport const Error= styled(ErrorMessage)`\n    background-color: #ffa500;\n    border-radius: 4px;\n    font-size: 12px;\n    width: fit-content;\n    padding: 2px;\n    margin-top: 2px;\n`\nexport const  Button= styled.button`\n    height: 26px;\nborder-radius: 4px;\nmargin-top: 20px;\nborder: 1px solid;\n :hover{\n    border-color: black;\n    background-color:orange;\n }\n  :focus{\n       color: #ffffff;\n    }\n    \n`","import { Formik, Form,   } from \"formik\";\nimport * as yup from 'yup';\nimport \"yup-phone\";\nimport PropTypes from 'prop-types';\nimport { Input, Error, Button } from \"./Form.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/operations\"\nimport { toast } from 'react-hot-toast';\n\nimport { selectContacts } from \"../../redux/selectors\";\n\n\nconst initialValues = {\n\n    name: \"\",\n    number: \"\"\n};\nconst schema = yup.object().shape({\n    name: yup.string().required().matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" ),\nnumber:yup.string().required().phone('UA', true, `phone number must be 9 digits and can contain spaces, dashes, parentheses and can start with \"+380\" or \"0\" `)\n})\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n const contacts  = useSelector(selectContacts)\n    const  handleSubmit = (values, {resetForm}) => {\n        // console.log(values)\n        \n        const { name, number } = values\n        for (const item of contacts.items) {\n      if (item.name === name & item.number===number) {\n        // alert(`Oooops, it seems like ${name} is already in contacts. `)\n        toast(`Oooops, it seems like ${name} is already in contacts. `, {\n          icon: '⚠️',\n          position: \"top-left\",\n          style: {\n            color: \"black\",\n        backgroundColor:\"#ffa500\"  } \n        });\n          resetForm();\n        return\n            }\n        }\n\n dispatch(addContact(values))\n        resetForm()\n        \n    }\n    \n \n    return (\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n            \n           <Form >\n               \n               <div>\n                   <h3>Name</h3>\n    <Input\n  type=\"text\"\n  name=\"name\"/>\n                    <Error name=\"name\" component=\"div\" />\n               </div>\n<div>\n                   <h3>Phone</h3>\n    <Input\n  type=\"tel\"\n  name=\"number\"\n\n/><Error name=\"number\" component=\"div\" />\n               </div>\n\n        <Button type=\"subbmit\" >Add contact</Button>\n           </Form></Formik>\n       )\n   }  \n\nFormik.propTypes = {\n    onSubmit: PropTypes.func,\n    initialValues: PropTypes.exact({\n        name: PropTypes.string,\n        number: PropTypes.string,\n    }),\n    validationSchema:PropTypes.object,\n\n}","\nimport styled from '@emotion/styled'\nexport const Input = styled.input`\nmargin-bottom: 5px;\nheight: 20px;\nborder-radius: 4px;\nborder: 1px solid;\n   :hover{\n    border-color: black;\n   }\n   \n`\nexport const Text = styled.div`\n        margin-bottom:4px;\n        font-size: 12px;\n    \n` ","\nimport { Input, Text } from \"./Filter.styled\"\nimport { setStatusFilter } from \"../../redux/filterSlice\"\n\n\nimport { useDispatch } from \"react-redux\";\n \nexport const Filter = () => {\n    \n    const dispatch = useDispatch();\n    const changeFilter = (e) => {\n        e.preventDefault();\n    //   console.log(e.currentTarget.value)\n    dispatch(setStatusFilter(e.currentTarget.value))\n   }\n\n  \n \n    return (\n       <>\n            <Text>Find contacts by name</Text>\n            <Input type=\"text\" onChange={ changeFilter} />\n            \n        </>     \n    )\n}\n","\nimport styled from '@emotion/styled'\nexport const List = styled.ul`\nmargin-top: 16px;\n padding: 0;\n `\nexport const Item = styled.div`\n width: 100% ;\n    display: flex;\n    justify-content: space-between;\n    align-items:center;\n   height: 48px;\n   border-bottom: 1px solid black;\n:last-child{\n    border: none;\n}\n `\n  export const Number = styled.div`\n    font-size: 12px;\n    \n `\nexport const Button = styled.button`\n      height: 26px;\n      border-radius: 4px;\nborder: 1px solid;\n \n :hover{\n    border-color: black;\n    background-color:orange;\n    \n   \n }\n    :focus{\n       color: white;\n    }\n `","import { Filter } from \"../Filter/Filter\"\nimport { List, Item, Number, Button } from \"./List.styled\"\nimport PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport { PulseLoader } from \"react-spinners\";\nimport { useSelector } from \"react-redux\";\nimport { selectContacts, selectFilter  } from \"../../redux/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts, deleteContact } from \"../../redux/operations\";\n\nexport const ContactList = ( ) => {\n  \n    const filterQ = useSelector(selectFilter);\n    \n    const dispatch = useDispatch();\n    \n   const { items, isLoading, error } = useSelector(selectContacts);\n    // console.log(items, isLoading, error)\n    \n  useEffect(() => {\n      dispatch(fetchContacts());\n  }, [dispatch]);\n    \n    const visibleContacts = items.filter(contact => contact.name.toLowerCase().includes(filterQ.toLowerCase())\n    );\n   \n    return (\n        <div style={{position:\"relative\"}}>\n            <Filter />\n            {isLoading && <PulseLoader\n  color=\"black\"\n                cssOverride={{\n                    position: \"absolute\",\n                    left:\"45%\"\n                    \n                }}\n  margin={2}\n  size={6}\n  speedMultiplier={2}\n/>}\n            <List >\n                \n      {error && <b>{error}</b>}\n            {visibleContacts.map(contact => (\n                <ContactItem key={contact.id} contact={contact}  />\n    \n            ))}\n                 \n                {(!visibleContacts.length && filterQ.length!==0) && <p style={{ fontSize: 14, }}>There is no result</p>}\n                 {(!visibleContacts.length && !filterQ.length && !isLoading) && <p style={{ fontSize:14  }}>The PhoneBook is empty!</p>}\n        \n        </List></div>\n    )\n}\n\nconst ContactItem = ({ contact:{name, number, id}}) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n    return (\n        <Item>\n            <div>\n                <div>{name}</div>\n                <Number>{number}</Number>\n            </div>\n            <Button type=\"button\" onClick={handleDelete} >Delete</Button>\n        </Item>\n        \n    )\n   \n}\n\nContactItem.propTypes = {\n    contact: PropTypes.exact({\n        name: PropTypes.string,\n        number: PropTypes.string,\n        id: PropTypes.string\n    }),\n    deleteContact:PropTypes.func,\n    \n}\n Filter.propTypes = {\n     changeFilter: PropTypes.func,\n     filter: PropTypes.string\n    \n}","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n    margin: 20px auto;\n    background-color: silver;\n    border-radius: 20px;\n    padding: 40px;\n    width: 240px;\n   \n   ;\n`","// import { useEffect } from 'react';\nimport {  useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from \"../components/Form/Form\";\nimport { ContactList } from '../components/List/List';\nimport { Container } from \"../components/App/App.styled\";\nimport { Toaster } from 'react-hot-toast';\n\n// import { fetchTasks } from '../redux/operations';\nimport { selectLoading } from '../redux/selectors';\n\nexport default function Contacts() {\n//   const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n//   useEffect(() => {\n//     dispatch(fetchTasks());\n//   }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your phoneBook</title>\n          </Helmet>\n                <Container>\n        <h1>PhoneBook</h1>\n        <ContactForm />\n              <h2>Contacts</h2>\n              <div>{isLoading && 'Request in progress...'}</div>\n        <ContactList />\n        <Toaster  toastOptions={{duration: 2000} }/>\n          </Container >\n     \n    </>\n  );\n}\n"],"names":["Input","styled","Field","Error","ErrorMessage","Button","initialValues","name","number","schema","yup","shape","required","matches","phone","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","values","resetForm","items","item","toast","icon","position","style","color","backgroundColor","addContact","validationSchema","type","component","Formik","PropTypes","Text","Filter","onChange","e","preventDefault","setStatusFilter","currentTarget","value","List","Item","Number","ContactList","filterQ","selectFilter","isLoading","error","useEffect","fetchContacts","visibleContacts","filter","contact","toLowerCase","includes","PulseLoader","cssOverride","left","margin","size","speedMultiplier","map","ContactItem","id","length","fontSize","onClick","deleteContact","propTypes","changeFilter","Container","Contacts","selectLoading","Helmet","toastOptions","duration"],"sourceRoot":""}