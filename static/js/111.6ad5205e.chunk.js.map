{"version":3,"file":"static/js/111.6ad5205e.chunk.js","mappings":"+PAGaA,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,4HAQLE,GAAOF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAF,yKAQJI,EAAQJ,EAAAA,EAAAA,OAAF,4N,6ICZdK,EAAgB,CAElBC,MAAO,GACPC,SAAU,IAERC,EAASC,EAAAA,SAAaC,MAAM,CAC9BJ,MAAOG,EAAAA,SAAaH,QAAQK,WAChCJ,SAASE,EAAAA,SAAaE,WAAWC,IAAI,KAGxBC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAYf,OAEJ,SAAC,KAAD,CAAQV,cAAgBA,EAAeW,SAZhB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAC7BC,QAAQC,IAAIH,GACZH,GACEO,EAAAA,EAAAA,IACEJ,IAGFC,GACH,EAI4DI,iBAAkBd,EAAjF,UAEW,UAAC,KAAD,YAEI,4BACI,mCACf,SAAC,KAAD,CACFe,KAAK,QACLC,KAAK,WACa,SAAC,KAAD,CAAOA,KAAK,QAAQC,UAAU,YAElD,4BACmB,sCACf,SAAC,KAAD,CACFF,KAAK,WACLC,KAAK,cAEL,SAAC,KAAD,CAAOA,KAAK,WAAWC,UAAU,YAG3B,SAAC,KAAD,CAAQF,KAAK,UAAb,wBAkBP,ECnEc,SAASG,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACd,EAAD,MAGL,C","sources":["components/Form/Form.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["\n import styled from '@emotion/styled'\nimport { Field ,ErrorMessage} from 'formik'\nexport const Input = styled(Field)`\nheight: 20px;\nborder-radius: 4px;\nborder: 1px solid;\n   :hover{\n    border-color: black;\n   }\n`\nexport const Error= styled(ErrorMessage)`\n    background-color: #ffa500;\n    border-radius: 4px;\n    font-size: 12px;\n    width: fit-content;\n    padding: 2px;\n    margin-top: 2px;\n`\nexport const  Button= styled.button`\n    height: 26px;\nborder-radius: 4px;\nmargin-top: 20px;\nborder: 1px solid;\n :hover{\n    border-color: black;\n    background-color:orange;\n }\n  :focus{\n       color: #ffffff;\n    }\n    \n`","import { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/operations';\n// import css from './LoginForm.module.css';\nimport * as yup from 'yup';\nimport { Error, Input, Button  } from 'components/Form/Form.styled';\n\nimport { Formik, Form,   } from \"formik\";\nconst initialValues = {\n\n    email: \"\",\n    password: \"\"\n};\nconst schema = yup.object().shape({\n    email: yup.string().email().required(),\npassword:yup.string().required().min(6)\n})\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, {resetForm}) => {\n    console.log(values)\n    dispatch(\n      logIn(\n        values\n      )\n    );\n      resetForm();\n  };\n\n    return (\n      \n<Formik initialValues= {initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n            \n           <Form >\n               \n               <div>\n                   <h3>Email</h3>\n    <Input\n  type=\"email\"\n  name=\"email\"/>\n                    <Error name=\"email\" component=\"div\" />\n               </div>\n<div>\n                   <h3>Password</h3>\n    <Input\n  type=\"password\"\n  name=\"password\"\n\n/><Error name=\"password\" component=\"div\" />\n               </div>\n\n        <Button type=\"subbmit\" >Log In</Button>\n           </Form></Formik>\n\n    //   <form onSubmit={handleSubmit}\n    //        validationschema={schema}\n    //     //   autoComplete=\"off\"\n    //   >\n    //   <label >\n    //     Email\n    //     <input type=\"email\" name=\"email\" />\n    //   </label>\n    //   <label >\n    //     Password\n    //     <input type=\"password\" name=\"password\" />\n    //   </label>\n    //   <button type=\"submit\">Log In</button>\n    // </form>\n  );\n};\n\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Input","styled","Field","Error","ErrorMessage","Button","initialValues","email","password","schema","yup","shape","required","min","LoginForm","dispatch","useDispatch","onSubmit","values","resetForm","console","log","logIn","validationSchema","type","name","component","Login","Helmet"],"sourceRoot":""}